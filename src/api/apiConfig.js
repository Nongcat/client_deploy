// src/axios/axiosConfig.js
import axios from 'axios';

// üåê ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô IP ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô IP ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ô Server
const SERVER_IP = '192.168.10.180'; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô IP ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡πÄ‡∏ä‡πà‡∏ô '192.168.1.100'
const SERVER_PORT = 4000;

const api = axios.create({
  baseURL: `http://${SERVER_IP}:${SERVER_PORT}/api`,
  timeout: 10000,
});

// üîç ‡πÄ‡∏û‡∏¥‡πà‡∏° interceptor ‡πÄ‡∏û‡∏∑‡πà‡∏≠ log ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
api.interceptors.request.use(
  (config) => {
    console.log(`üåê API Request: ${config.method?.toUpperCase()} ${config.baseURL}${config.url}`);
    return config;
  },
  (error) => {
    console.error('‚ùå API Request Error:', error);
    return Promise.reject(error);
  }
);

api.interceptors.response.use(
  (response) => {
    console.log(`‚úÖ API Response: ${response.status} ${response.config.url}`);
    return response;
  },
  (error) => {
    console.error('‚ùå API Response Error:', error.message);
    if (error.code === 'ERR_NETWORK' || error.code === 'ERR_CONNECTION_REFUSED') {
      console.error(`üö® Cannot connect to server at http://${SERVER_IP}:${SERVER_PORT}`);
      console.error('Please check:');
      console.error('1. Server is running');
      console.error('2. IP address is correct');
      console.error('3. Firewall settings');
      console.error('4. CORS configuration');
    }
    return Promise.reject(error);
  }
);

export default api;